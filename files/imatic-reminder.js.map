{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/files/reminder-modal.js","webpack:///./js/files/utils.js","webpack:///./js/files/reminder-actions.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","$","document","ready","select2","toolBox","closeModalButton","toggleImaticReminderModal","toggleClass","each","this","attr","includes","data","removeClass","addClass","on","e","preventDefault","showMessages","message","color","timeout","messageContainer","createElement","style","position","top","left","padding","border","borderRadius","zIndex","display","backgroundColor","textContent","body","appendChild","setTimeout","sendFormData","form","method","fetch","then","response","ok","Error","text","dataObj","JSON","parse","status","catch","error","console","Promise","reject","addEventListenersToButtons","editButtons","querySelectorAll","deleteButtons","forEach","button","addEventListener","reminderId","getAttribute","action","table","getElementById","formData","FormData","input","append","result","remove","json","tbody","reminders","rowData","row","id","innerHTML","username","remind_at","edit_action","delete_action","user_id"],"mappings":"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","file":"imatic-reminder.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","$(document).ready(function () {\n\n    $('.modal-recipients-select').select2();\n\n    const toolBox = $('.widget-toolbox a');\n    const closeModalButton = $('#imatic-reminder-close-modal')\n\n    toolBox.each(function () {\n        const attributeHref = $(this).attr('href');\n        if (attributeHref.includes('imatic_remind_issue.php')) {\n            const reminderCount = $('#count-reminders').data('count');\n            if (reminderCount > 0) {\n                $(this).removeClass('btn-primary').addClass('btn-warning');\n            }\n\n            $(this).on('click', function (e) {\n                e.preventDefault()\n                toggleImaticReminderModal();\n            })\n        }\n    })\n\n    function toggleImaticReminderModal() {\n        const imaticReminderModal = $('#imatic-reminder-modal');\n        imaticReminderModal.toggleClass(\"show\");\n    }\n\n    closeModalButton.on('click', function (e) {\n        e.preventDefault()\n        toggleImaticReminderModal();\n    })\n\n\n    $('.close').on('click', function () {\n        toggleImaticReminderModal();\n    });\n\n    $('.other-button').on('click', function () {\n        toggleImaticReminderModal();\n    });\n});\n\n","export function showMessages(message, color, timeout = 2000) {\n    let messageContainer = document.createElement('div');\n\n    messageContainer.style.position = 'fixed';\n    messageContainer.style.top = '50%';\n    messageContainer.style.left = '50%';\n    messageContainer.style.padding = '20px';\n    messageContainer.style.border = '1px solid white';\n    messageContainer.style.borderRadius = '5px';\n    messageContainer.style.zIndex = '9999';\n    messageContainer.style.color = 'black';\n    messageContainer.style.display = 'block';\n    messageContainer.style.backgroundColor = color;\n    messageContainer.textContent = message;\n\n    document.body.appendChild(messageContainer);\n\n    setTimeout(function () {\n        messageContainer.style.display = 'none';\n    }, timeout);\n}\n\nexport function sendFormData(form, method = 'POST') {\n\n    return fetch(form.get('action'), {\n        method: method,\n        body: form\n    })\n        .then(response => {\n            if (!response.ok) {\n                showMessages('Response was not ok', \"red\");\n                throw new Error('Response was not ok');\n            }\n            return response.text();\n        })\n        .then(data => {\n            let dataObj = JSON.parse(data);\n            if (dataObj.status === 200) {\n                showMessages(dataObj.message, \"#DEF1D8\");\n                return true;\n            } else {\n                showMessages(dataObj.message, \"red\");\n                return false;\n            }\n        })\n        .catch(error => {\n            console.error('There has been a problem with your fetch operation:', error);\n            return Promise.reject(error);\n        });\n}","import {showMessages} from './utils';\nimport {sendFormData} from './utils';\nfunction addEventListenersToButtons() {\n    let editButtons = document.querySelectorAll('.edit-reminder');\n    let deleteButtons = document.querySelectorAll('.delete-reminder');\n\n    editButtons.forEach(function (button) {\n        button.addEventListener('click', function (e) {\n            e.preventDefault()\n            const reminderId = this.getAttribute(\"data-id\");\n            const action = this.getAttribute(\"data-action\");\n            let table = document.getElementById('reminder-table-' + reminderId);\n\n            let formData = new FormData();\n            table.querySelectorAll('input, textarea').forEach(function (input) {\n                formData.append(input.name, input.value);\n            });\n            formData.append('action', action);\n\n            sendFormData(formData);\n        });\n    });\n\n    deleteButtons.forEach(function (button) {\n        button.addEventListener('click', function (e) {\n            e.preventDefault()\n\n            const reminderId = this.getAttribute(\"data-id\");\n                const action = this.getAttribute(\"data-action\");\n            let table = document.getElementById('reminder-table-' + reminderId);\n\n            let formData = new FormData();\n            table.querySelectorAll('input, textarea').forEach(function (input) {\n                formData.append(input.name, input.value);\n            });\n            formData.append('action', action);\n\n            sendFormData(formData)\n                .then(result => {\n                    if (result) {\n                        if (table) {\n                            table.remove();\n                        }\n                    }\n                });\n        });\n    });\n}\n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n    let reminderCreateForm = document.getElementById('imatic-reminder-create-form');\n\n    reminderCreateForm.addEventListener('submit', function (e) {\n        e.preventDefault()\n        let formData = new FormData(this);\n        let action = this.getAttribute('action');\n        formData.append('action', action);\n\n        fetch(action, {\n            method: 'POST',\n            body: formData\n        })\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                return response.json();\n            })\n            .then(data => {\n                if (data && data.status === 200) {\n                    showMessages(data.message, \"#DEF1D8\");\n\n                    document.getElementById('remind_at').value = '';\n                    document.getElementById('comment').value = '';\n\n                    let table = document.getElementById('reminders-table');\n                    let tbody = document.createElement('tbody');\n                    let rows = data.reminders;\n\n                    rows.forEach(function (rowData) {\n                        let row = document.createElement('tr');\n                        row.id = 'reminder-table-' + rowData.id;\n\n                        row.innerHTML = `\n                            <td>${rowData.id}</td>\n                            <td>${rowData.username}</td>\n                            <td>\n                                <input type=\"datetime-local\" name=\"remind_at\" class=\"form-control\" value=\"${rowData.remind_at}\"></td>\n                            <td>\n                                <textarea name=\"message\" class=\"form-control\" rows=\"1\" cols=\"20\">${rowData.message}</textarea>\n                            </td>\n                            <td class=\"text-center\"><i class=\"fa fa-close text-danger\" /></td>\n                            <td>\n                                <button type=\"button\" class=\"btn btn-primary btn-xs edit-reminder\" data-id=\"${rowData.id}\"\n                                        data-action=\"${rowData.edit_action}\">\n                                    <i class=\"fa fa-edit\"></i>\n                                </button>\n                                <button type=\"button\" class=\"btn btn-danger btn-xs delete-reminder\" data-id=\"${rowData.id}\"\n                                        data-action=\"${rowData.delete_action}\">\n                                    <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                                </button>\n                                <input type=\"hidden\" name=\"id\" value=\"${rowData.id}\">\n                                <input type=\"hidden\" name=\"user_id\" value=\"${rowData.user_id}\">\n                            </td>\n                        `;\n                        tbody.appendChild(row);\n\n                        table.appendChild(tbody);\n                    })\n\n                    addEventListenersToButtons()\n\n                } else {\n                    showMessages('An error occurred', \"red\");\n                }\n            })\n            .catch(error => {\n                console.error('There has been a problem with your fetch operation:', error);\n            });\n    })\n    addEventListenersToButtons()\n})"],"sourceRoot":""}